import{_ as o,I as a,c as h,o as d,j as s,J as e,ak as r,a as p}from"./chunks/framework.DeVdP8gD.js";const C=JSON.parse('{"title":"InPageEdit NEXT Documentation","description":"","frontmatter":{},"headers":[],"relativePath":"README.md","filePath":"README.md","lastUpdated":1758970658000}'),k={name:"README.md"};function c(g,i,b,u,m,f){const t=a("NolebasePageProperties"),n=a("NolebaseGitContributors"),l=a("NolebaseGitChangelog");return d(),h("div",null,[i[0]||(i[0]=s("h1",{id:"inpageedit-next-documentation",tabindex:"-1"},[p("InPageEdit NEXT Documentation "),s("a",{class:"header-anchor",href:"#inpageedit-next-documentation","aria-label":"Permalink to “InPageEdit NEXT Documentation”"},"​")],-1)),e(t),i[1]||(i[1]=r('<p>This is the documentation for InPageEdit NEXT.</p><h2 id="before-dev-build" tabindex="-1">Before dev &amp; build <a class="header-anchor" href="#before-dev-build" aria-label="Permalink to “Before dev &amp; build”">​</a></h2><p>Build @inpageedit/core first (for <code>twoslash</code>):</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> core:build</span></span></code></pre></div><h2 id="cloudflare-pages" tabindex="-1">Cloudflare Pages <a class="header-anchor" href="#cloudflare-pages" aria-label="Permalink to “Cloudflare Pages”">​</a></h2><p>build command (for <code>GitChangelog</code>):</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> fetch</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --depth=100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ||</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> fetch</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --unshallow</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ||</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs:build</span></span></code></pre></div>',7)),e(n),e(l)])}const F=o(k,[["render",c]]);export{C as __pageData,F as default};
