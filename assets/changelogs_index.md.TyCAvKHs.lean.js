import{d as I,Y as T,c as k,o as p,n as W,r as g,an as $,h as v,N as S,j as l,J as u,t as P,b as L,K as C,w as i,a as e,x as M,p as E,e as N,I as w}from"./chunks/framework.DeVdP8gD.js";import{_ as j,f as R}from"./chunks/theme.oFgutatN.js";const q=I({__name:"Timeline",props:{type:{default:"default"},titleTag:{default:"h3"},namespace:{default:""}},setup(o){return T("timeline:titleTag",o.titleTag),T("timeline:namespace",o.namespace),(r,n)=>(p(),k("ul",{class:W(["timeline",`timeline-${o.type}`])},[g(r.$slots,"default")],2))}}),U=["data-item-id"],B={class:"timeline-info"},D={key:0},F={class:"timeline-content"},V=I({__name:"TimelineItem",props:{info:{},title:{},content:{},time:{},titleTag:{},titleId:{},itemId:{}},setup(o){const r=o,n=$("titleRef"),c=v(()=>r.titleTag||S("timeline:titleTag")||"h3"),s=v(()=>{const d=S("timeline:namespace")||"",f=(r.itemId||r.titleId||r.title||n.value?.innerText||"").trim().replace(/[\s#]+/g,"-");return f?`${d}${f}`:void 0}),a=v(()=>r.time?new Date(r.time):void 0);return(d,f)=>(p(),k("li",{class:"timeline-item","data-item-id":s.value},[l("div",B,[a.value?(p(),k("span",D,[u(j,{date:a.value},null,8,["date"])])):g(d.$slots,"info",{key:1},()=>[l("span",null,P(o.info),1)])]),f[0]||(f[0]=l("div",{class:"timeline-marker"},null,-1)),l("div",F,[(p(),L(C(c.value),{class:"timeline-title",id:s.value||o.title,ref_key:"titleRef",ref:n},{default:i(()=>[g(d.$slots,"title",{},()=>[e(P(o.title),1)])]),_:3},8,["id"])),l("p",null,[g(d.$slots,"content",{},()=>[g(d.$slots,"default",{},()=>[e(P(o.content),1)])])])])],8,U))}}),A={key:0,style:{display:"flex",gap:"1em",flexWrap:"wrap",fontSize:"0.9em"}},O=["href"],G=["href"],z=["href"],t=I({__name:"ChangeLog",props:{version:{},info:{},title:{},time:{}},setup(o){const r=o,n=M(null),c=async()=>{n.value=await R("@inpageedit/core")},s=v(()=>{const m=n.value?.versions?.[r.version]||null;return m?{...m,time:n.value?.time?.[r.version]||void 0}:null}),a=v(()=>{if(!s.value)return null;const m=Object.keys(n.value?.versions||{}).sort((x,y)=>x.localeCompare(y,void 0,{numeric:!0})),b=m.indexOf(r.version);if(b>0){const x=m[b-1],y=n.value?.versions?.[x]||null;return y?{...y,time:n.value?.time?.[x]||void 0}:null}return null}),d=v(()=>r.time||s.value?.time||void 0),f=v(()=>r.info!==void 0?r.info:n.value===null?"Loading...":d.value?void 0:"Coming Soon");return E(c),(m,b)=>(p(),L(V,{"item-id":o.version,time:d.value,info:f.value},{default:i(()=>[g(m.$slots,"default",{},()=>[b[0]||(b[0]=l("ul",null,[l("li",null,"修复已知问题，优化使用体验~")],-1))]),s.value?(p(),k("p",A,[l("a",{href:`https://www.npmjs.com/package/@inpageedit/core/v/${o.version}`,target:"_blank",rel:"noopener noreferrer"}," View on NPM ",8,O),a.value?(p(),k("a",{key:0,href:`https://github.com/inpageedit/inpageedit-next/compare/${a.value.version}...${o.version}`,target:"_blank",rel:"noopener noreferrer"}," Git Diff ",8,G)):N("",!0),l("a",{href:`https://github.com/inpageedit/inpageedit-next/issues/new?template=bug_report.md&ipe_version=${o.version}`,target:"_blank",rel:"noopener noreferrer"}," Bug Report ",8,z)])):N("",!0)]),title:i(()=>[g(m.$slots,"title",{},()=>[e(P(o.title||o.version),1)])]),_:3},8,["item-id","time","info"]))}}),X={id:"前瞻预览版-v0-x-x",tabindex:"-1"},Q=JSON.parse('{"title":"更新日志","description":"","frontmatter":{"title":"更新日志"},"headers":[],"relativePath":"changelogs/index.md","filePath":"changelogs/index.md","lastUpdated":1761904599000}'),J={name:"changelogs/index.md"},Y=I({...J,setup(o){return(r,n)=>{const c=w("NolebasePageProperties"),s=w("Badge"),a=w("VPNolebaseInlineLinkPreview"),d=w("NolebaseGitContributors"),f=w("NolebaseGitChangelog");return p(),k("div",null,[n[60]||(n[60]=l("h1",{id:"inpageedit-next-更新日志",tabindex:"-1"},[e("InPageEdit NEXT 更新日志 "),l("a",{class:"header-anchor",href:"#inpageedit-next-更新日志","aria-label":"Permalink to “InPageEdit NEXT 更新日志”"},"​")],-1)),u(c),l("h2",X,[n[1]||(n[1]=e("前瞻预览版 ",-1)),u(s,null,{default:i(()=>[...n[0]||(n[0]=[e("v0.x.x",-1)])]),_:1}),n[2]||(n[2]=e()),n[3]||(n[3]=l("a",{class:"header-anchor",href:"#前瞻预览版-v0-x-x","aria-label":"Permalink to “前瞻预览版 v0.x.x”"},"​",-1))]),u(q,{"title-tag":"h3"},{default:i(()=>[u(t,{version:"0.10.0"},{default:i(()=>[l("ul",null,[l("li",null,[n[7]||(n[7]=e("feat: introduce idb-plus ",-1)),l("ul",null,[l("li",null,[n[5]||(n[5]=e("我们解耦并发布了我们的轻量级 IndexedDB 封装库：",-1)),u(a,{href:"https://www.npmjs.com/package/idb-plus",target:"_blank",rel:"noreferrer"},{default:i(()=>[...n[4]||(n[4]=[e("idb-plus",-1)])]),_:1})]),n[6]||(n[6]=l("li",null,[l("code",null,"ctx.storage"),e(" 的用法与此前没有区别")],-1))])]),n[8]||(n[8]=l("li",null,[e("fix: prevent double namespaces "),l("ul",null,[l("li",null,"修复了构造 WikiTitle 时 title 包含命名空间前缀时，重复添加命名空间前缀的问题")])],-1)),n[9]||(n[9]=l("li",null,[e("fix: Special:Diff behavior (#4 by @AlPha5130) "),l("ul",null,[l("li",null,[e("修正 "),l("code",null,"PluginInArticleLinks"),e(" 中针对特殊页面的 "),l("code",null,"diff"),e(" 和 "),l("code",null,"oldid"),e(" 提取逻辑，并在 "),l("code",null,"diff"),e(" 缺失时将其默认为 "),l("code",null,"prev")])])],-1)),n[10]||(n[10]=l("li",null,[e("feat: + PluginPrefSync "),l("ul",null,[l("li",null,"添加了偏好设置手动导入、导出功能"),l("li",null,"我们将在未来提供真正的跨设备同步功能")])],-1))])]),_:1}),u(t,{version:"0.9.3"},{default:i(()=>[...n[11]||(n[11]=[l("ul",null,[l("li",null,"修复了一些小问题，提升了项目的整体质量。")],-1)])]),_:1}),u(t,{version:"0.9.2"},{default:i(()=>[...n[12]||(n[12]=[l("ul",null,[l("li",null,[e("refactor!: drop idb-keyval, using indexedDB native API "),l("ul",null,[l("li",null,[e("我们完全抛弃了对 "),l("code",null,"idb-keyval"),e(" 以及 "),l("code",null,"localforage"),e(" 的依赖，直接使用原生 IndexedDB API 来实现 Storage 服务。")]),l("li",null,"这使得打包体积进一步减小了 ~2kb。"),l("li",null,"我们决定在之后解耦并发布一个轻量级的 IndexedDB 封装库，以便其他项目使用。")])])],-1)])]),_:1}),u(t,{version:"0.9.1",style:{"text-decoration":"line-through",opacity:"0.5"},info:"UNPUBLISHED"},{default:i(()=>[...n[13]||(n[13]=[l("div",{class:"info custom-block github-alert"},[l("p",{class:"custom-block-title"},"INFO"),l("p"),l("p",null,[e("由于 "),l("code",null,"idb-keyval"),e(" 上游问题，在同一数据库无法开启多个事务，导致 storage 服务异常，此版本完全无法使用，已撤销发布。")])],-1),l("ul",null,[l("li",null,[e("refactor!: make preferences as a built-in service "),l("ul",null,[l("li",null,[l("code",null,"ctx.preferences"),e(" 从插件变成了内置服务")])])]),l("li",null,[e("chore!: drop diff.js "),l("ul",null,[l("li",null,[e("移除了不再使用的 "),l("code",null,"diff")])])]),l("li",null,[e("perf!: replace localforage with idb-keyval "),l("ul",null,[l("li",null,[e("使用了 "),l("code",null,"idb-keyval"),e(" 替代 "),l("code",null,"localforage"),e("，打包体积降低 ~40kb")])])]),l("li",null,[e("chore: housekeeping "),l("ul",null,[l("li",null,"更新了依赖，修复了一些小问题，提升了项目的整体质量"),l("li",null,[l("code",null,"wiki-saikou@7.1.2")]),l("li",null,[l("code",null,"@inpageedit/modal@1.0.1")])])])],-1)])]),_:1}),u(t,{version:"0.9.0"},{default:i(()=>[...n[14]||(n[14]=[l("ul",null,[l("li",null,[e("fix: invalid WikiMetadata cache key "),l("ul",null,[l("li",null,"修正了一个导致 WikiMetadata 缓存失效的问题")])]),l("li",null,[e("perf!: get endpoint by meta and link "),l("ul",null,[l("li",null,[e("我们使用了一些魔法手段获取 MediaWiki 元信息，从而减少了对 "),l("code",null,"mw.config"),e(" 的依赖：")]),l("li",null,[e("通过 "),l("code",null,'<meta name="generator">'),e(" 判断是否为 MediaWiki 站点 + "),l("code",null,'<link rel="EditURI">'),e(" 获取 API endpoint")]),l("li",null,[e("通过 "),l("code",null,'<link rel="canonical">'),e(" 获取当前条目的永久链接，从而解析当前条目标题")])])])],-1)])]),_:1}),u(t,{version:"0.8.1"},{default:i(()=>[l("ul",null,[l("li",null,[n[18]||(n[18]=e("feat(modal)!: decouple and make it a standalone package ",-1)),l("ul",null,[l("li",null,[n[16]||(n[16]=e("我们解耦并发布了我们的轻量级模态框库：",-1)),u(a,{href:"https://www.npmjs.com/package/@inpageedit/modal",target:"_blank",rel:"noreferrer"},{default:i(()=>[...n[15]||(n[15]=[e("@inpageedit/modal",-1)])]),_:1})]),n[17]||(n[17]=l("li",null,[l("code",null,"ctx.modal"),e(" 的用法与此前没有区别")],-1))])]),n[19]||(n[19]=l("li",null,[e("refactor!: +CurrentPageService "),l("ul",null,[l("li",null,[e("我们完全抛弃了对于 "),l("code",null,"mw.config.get('wgPageName')"),e("、"),l("code",null,"mw.config.get('wgArticleId')"),e("、"),l("code",null,"mw.config.get('wgCurrentRevisionId')"),e(" 的依赖，完全使用当前的 URL + WikiMetadata 解析当前的页面基本信息")]),l("li",null,[l("code",null,"currentPage.url"),e(" {URL} 当前页面 URL")]),l("li",null,[l("code",null,"currentPage.params"),e(" {URLSearchParams} 当前页面 URL 参数")]),l("li",null,[l("code",null,"currentPage.wikiAction"),e(" {string} 当前页面 Wiki 动作")]),l("li",null,[l("code",null,"currentPage.wikiTitle"),e(" {WikiTitle} 当前页面标题实例")]),l("li",null,[l("code",null,"currentPage.isMainPage"),e(" {boolean} 是否为 wiki 首页")])])],-1)),n[20]||(n[20]=l("li",null,[e("fix: specia:edit/newsection requires sub "),l("ul",null,[l("li",null,"仅当 [[Special:Edit]] / [[Special:NewSection]] 链接拥有子页面部分时，才创建快速编辑按钮")])],-1)),n[21]||(n[21]=l("li",null,[e("fix: parsing title includes special chars (?/&/...) "),l("ul",null,[l("li",null,[e("修复了 wikiTitle.newTitleFromUrl 对包含特殊字符（"),l("code",null,"?"),e("、"),l("code",null,"&"),e("、"),l("code",null,"="),e("、...）的条目的错误解析")])])],-1)),n[22]||(n[22]=l("li",null,[e("chore: housekeeping "),l("ul",null,[l("li",null,"更新了依赖，修复了一些小问题，提升了项目的整体质量。")])],-1))])]),_:1}),u(t,{version:"0.8.0"},{default:i(()=>[...n[23]||(n[23]=[l("ul",null,[l("li",null,[e("fix: wrong behavior of .ipe-modal-no-scroll "),l("ul",null,[l("li",null,"锁定滚动时不会再错误修改 documentElement 的样式")])]),l("li",null,[e("feat: modal button keyPress supports combos "),l("ul",null,[l("li",null,[e("模态框按钮现在支持组合键触发（例如 "),l("code",null,"ctrl + s"),e("）")]),l("li",null,"快速编辑等功能现已支持配置自定义快捷键")])]),l("li",null,[e("refactor: add WikiPage factory, enhance type declarations "),l("ul",null,[l("li",null,[e("将 "),l("code",null,"WikiPage"),e(" 模型重构为工厂函数，增强了类型声明")])])]),l("li",null,[e("perf: toolbox buttons check permissions "),l("ul",null,[l("li",null,"工具盒™按钮现在会进行环境检查，避免在不可编辑的页面显示无效按钮")])]),l("li",null,[e("refactor!: rename batch types (SiteFoo → WikiFoo) "),l("ul",null,[l("li",null,[e("将所有 "),l("code",null,"SiteFoo"),e(" 类型重命名为 "),l("code",null,"WikiFoo"),e("，以更好地反映其用途")])])]),l("li",null,[e("refactor!: rename service sitemeta → wiki "),l("ul",null,[l("li",null,[e("将 "),l("code",null,"sitemeta"),e(" 服务重命名为 "),l("code",null,"wiki"),e("，以更好地反映其用途")])])]),l("li",null,[e("feat!: add title parser to WikiTitleService "),l("ul",null,[l("li",null,[e("我们为 "),l("code",null,"WikiTitleService"),e(" 添加了标题解析功能")]),l("li",null,[e("现在你可以使用 "),l("code",null,"wikiTitle.newTitleFromUrl(url)"),e(" 来从 URL 创建标题实例，并快速检查 URL 是否为本站链接")]),l("li",null,[e("添加了 "),l("code",null,"wikiTitle.currentTitle"),e(" getter，方便获取当前页面标题实例")])])]),l("li",null,[e("feat: add clear cache button for WikiMetadata "),l("ul",null,[l("li",null,"你现在可以从设置页面清除 WikiMetadata 的缓存了")])]),l("li",null,[e("feat: add toggle method for toolbox "),l("ul",null,[l("li",null,[e("我们为工具盒™添加了切换显示/隐藏的方法 "),l("code",null,"toolbox.toggle()"),e("，方便插件开发者使用")])])]),l("li",null,[e("chore: batch improvements "),l("ul",null,[l("li",null,"更新了依赖，修复了一些小问题，提升了项目的整体质量。")])])],-1)])]),_:1}),u(t,{version:"0.7.0"},{default:i(()=>[...n[24]||(n[24]=[l("ul",null,[l("li",null,[e("chore: gc for modals, fix typo "),l("ul",null,[l("li",null,"关闭快速编辑模态框时，自动销毁相关模态框"),l("li",null,"修正了偏好设置的拼写错误")])]),l("li",null,[e("feat: prev/next/edit buttons for compare table "),l("ul",null,[l("li",null,"快速差异添加了 上一个/下一个/编辑 按钮，方便快速跳转和编辑")])]),l("li",null,[e("feat: add preferences for in-article links "),l("ul",null,[l("li",null,"为文章内链接侵入添加了配置项"),l("li",null,"例如，你现在可以控制是否为红链添加快速编辑按钮")])]),l("li",null,[e("fix: wikiLink should skip none article links "),l("ul",null,[l("li",null,"重构了 wikiLink 的逻辑"),l("li",null,"现在 wikiLink 不会再检查非本站链接")])]),l("li",null,[e("feat: quickEdit support for special:edit/mypage... and so on "),l("ul",null,[l("li",null,"快速编辑现在支持一些特殊的特殊页面，例如 Special:Edit/MyPage/MyTalk...")])]),l("li",null,[e("fix: adjust the button order to match the original mw "),l("ul",null,[l("li",null,"调整了快速编辑中的按钮的顺序，使其与原始 MediaWiki 一致")])]),l("li",null,[e("fix: minor css fixes "),l("ul",null,[l("li",null,"修正了一些 CSS 样式")])]),l("li",null,[e("chore: housekeeping "),l("ul",null,[l("li",null,"修复了编辑的快速预览，未附带 pst 参数的问题")])])],-1)])]),_:1}),u(t,{version:"0.6.0"},{default:i(()=>[...n[25]||(n[25]=[l("ul",null,[l("li",null,[e("feat: add quick delete plugin "),l("ul",null,[l("li",null,"我们添加了快速删除插件，现在你可以快速删除页面了！")])]),l("li",null,[e("refactor: in-article-links "),l("ul",null,[l("li",null,"我们重构了wiki链接解析逻辑，现在可以更轻松地获取并解析文章内的wiki链接")])]),l("li",null,[e("feat: + WikiTitle "),l("ul",null,[l("li",null,[e("添加了 "),l("code",null,"WikiTitle"),e(" 模型，它的用法类似 "),l("code",null,"mw.Title"),e("，但不依赖 MediaWiki 环境，且更加强大")])])])],-1)])]),_:1}),u(t,{version:"0.5.4"},{default:i(()=>[...n[26]||(n[26]=[l("ul",null,[l("li",null,"更新了依赖，修复了一些小问题，提升了项目的整体质量。")],-1)])]),_:1}),u(t,{version:"0.5.3"},{default:i(()=>[...n[27]||(n[27]=[l("ul",null,[l("li",null,[e("chore: improve toolbox styles "),l("ul",null,[l("li",null,"优化了工具盒™的样式，它看起来更有趣了！")])]),l("li",null,[e("refactor: dynamically calculating toolbox transition-delay "),l("ul",null,[l("li",null,"动态计算按钮的动画间延迟，现在创建无数个按钮也能获得非线性动画效果！")])]),l("li",null,[e("fix: modal.notify logic, improve modal css "),l("ul",null,[l("li",null,"优化了吐司通知的逻辑以及样式，终于不是一片雪白了！")])]),l("li",null,[e("fix: schema value race condition "),l("ul",null,[l("li",null,"修复了参数设置中，修改文本框内容时总是丢失焦点的问题")])]),l("li",null,[e("chore: batch improvements "),l("ul",null,[l("li",null,"修复了一些小问题，提升了项目的整体质量")])])],-1)])]),_:1}),u(t,{version:"0.5.2"},{default:i(()=>[...n[28]||(n[28]=[l("ul",null,[l("li",null,"chore: minor css adjustments"),l("li",null,[e("chore!: normalize event names "),l("ul",null,[l("li",null,"我们调整了官方插件的事件名称，统一了事件名称的命名规范。"),l("li",null,[e("完整的调整列表： "),l("ul",null,[l("li",null,[l("code",null,"quickEdit/initOptions"),e(" -> "),l("code",null,"quick-edit/init-options")]),l("li",null,[l("code",null,"quickEdit/showModal"),e(" -> "),l("code",null,"quick-edit/show-modal")]),l("li",null,[l("code",null,"quickEdit/wikiPage"),e(" -> "),l("code",null,"quick-edit/wiki-page")]),l("li",null,[l("code",null,"quickPreview/showModal"),e(" -> "),l("code",null,"quick-preview/show-modal")]),l("li",null,[l("code",null,"quickPreview/loaded"),e(" -> "),l("code",null,"quick-preview/loaded")]),l("li",null,[l("code",null,"toolbox/button/added"),e(" -> "),l("code",null,"toolbox/button-added")]),l("li",null,[l("code",null,"toolbox/button/removed"),e(" -> "),l("code",null,"toolbox/button-removed")])])])])])],-1)])]),_:1}),u(t,{version:"0.5.1"},{default:i(()=>[...n[29]||(n[29]=[l("ul",null,[l("li",null,[e("fix: edit section should not replace fulltext "),l("ul",null,[l("li",null,"段落编辑不再覆盖全文内容")])]),l("li",null,[e("chore: minor css improvements "),l("ul",null,[l("li",null,"优化了部分组件的布局")])])],-1)])]),_:1}),u(t,{version:"0.5.0"},{title:i(()=>[n[31]||(n[31]=e("0.5.0 ",-1)),u(s,{type:"rainbow"},{default:i(()=>[...n[30]||(n[30]=[e("重量级",-1)])]),_:1})]),default:i(()=>[l("ul",null,[n[36]||(n[36]=l("li",null,[e("refactor!: drop jquery, drop ssi-modal "),l("ul",null,[l("li",null,"我们完全抛弃了对 jQuery 和 ssi-modal 的依赖，使用原生 DOM API 和 CSS 来实现 Modal 服务。"),l("li",null,"我们计划在不久的将来解耦并发布该轻量级 modal 库。")])],-1)),l("li",null,[n[35]||(n[35]=e("feat: + ipe-next logos ",-1)),l("ul",null,[l("li",null,[n[33]||(n[33]=e("我们彻底重新设计了",-1)),u(a,{href:"./../about/logo"},{default:i(()=>[...n[32]||(n[32]=[e("InPageEdit Logos",-1)])]),_:1}),n[34]||(n[34]=e("！",-1))])])]),n[37]||(n[37]=l("li",null,[e("chore: batch improvements "),l("ul",null,[l("li",null,"feat(schemastery-form): transition for array/dict reorder"),l("li",null,"feat(schemastery-form): const support raw-html"),l("li",null,"feat(schemastery-form): add support for date/time/datetime"),l("li",null,"chore(core): IPEModal batch improvements")])],-1))])]),_:1}),u(t,{version:"0.4.1"},{default:i(()=>[l("ul",null,[n[41]||(n[41]=l("li",null,[e("chore: housekeeping "),l("ul",null,[l("li",null,"更新了依赖，修复了一些小问题，提升了项目的整体质量"),l("li",null,[e("将部分核心服务标记为 "),l("code",null,"builtin"),e("，以便在不声明注入时也能直接使用："),l("code",null,"api"),e(", "),l("code",null,"resourceLoader"),e(", "),l("code",null,"modal"),e(", "),l("code",null,"storage"),e(", "),l("code",null,"sitemeta"),e(", "),l("code",null,"wikiPage")])])],-1)),l("li",null,[n[40]||(n[40]=e("refactor!: replace logger with @inpageedit/logger ",-1)),l("ul",null,[l("li",null,[n[39]||(n[39]=e("我们解耦并发布了我们的简单、强大、可扩展的 Logger 库：",-1)),u(a,{href:"https://www.npmjs.com/package/@inpageedit/logger",target:"_blank",rel:"noreferrer"},{default:i(()=>[...n[38]||(n[38]=[e("@inpageedit/logger",-1)])]),_:1})])])])])]),_:1}),u(t,{version:"0.4.0"},{default:i(()=>[l("ul",null,[l("li",null,[n[45]||(n[45]=e("perf!: replace cordis with @cordisjs/core ",-1)),l("ul",null,[l("li",null,[n[43]||(n[43]=e("我们用 ",-1)),u(a,{href:"https://www.npmjs.com/package/@cordisjs/core",target:"_blank",rel:"noreferrer"},{default:i(()=>[...n[42]||(n[42]=[e("@cordisjs/core",-1)])]),_:1}),n[44]||(n[44]=e(" 替换了对 Cordis 完整包的依赖，大幅减小了打包体积。",-1))])])]),n[46]||(n[46]=l("li",null,[e("feat: add log level configuration "),l("ul",null,[l("li",null,[e("现在你可以通过配置项 "),l("code",null,"logLevel"),e(" 来控制日志输出的详细程度了。")]),l("li",null,[e("可选值是 "),l("code",null,"enum LoggerLevelRank"),e("（"),l("code",null,"debug = 0"),e(", "),l("code",null,"info = 1"),e(", "),l("code",null,"warn = 2"),e(", "),l("code",null,"error = 3"),e(", "),l("code",null,"silent = 4"),e("）。")]),l("li",null,[e("默认情况下，开发环境下日志级别为 "),l("code",null,"0"),e("，生产环境下为 "),l("code",null,"1"),e("。嫌吵的话可以调高点。")])])],-1))])]),_:1}),u(t,{version:"0.3.2"},{default:i(()=>[...n[47]||(n[47]=[l("ul",null,[l("li",null,[e("fix: ensure autoload run once "),l("ul",null,[l("li",null,"修正了自动加载功能可能被多次触发的问题")])])],-1)])]),_:1}),u(t,{version:"0.3.1"},{default:i(()=>[l("ul",null,[n[52]||(n[52]=l("li",null,[e("fix: wrong states check for build format "),l("ul",null,[l("li",null,"修正了是否自动导入 css 的错误判断")])],-1)),n[53]||(n[53]=l("li",null,[e("fix: wrong "),l("code",null,"__VERSION__"),e(" constant in build "),l("ul",null,[l("li",null,"修正了打包时插入的错误版本号常量")])],-1)),l("li",null,[n[51]||(n[51]=e("feat!: introduce schemastery-form ",-1)),l("ul",null,[l("li",null,[n[49]||(n[49]=e("我们解耦并发布了开箱即用、体积小巧的 ",-1)),u(a,{href:"https://www.npmjs.com/package/schemastery-form",target:"_blank",rel:"noreferrer"},{default:i(()=>[...n[48]||(n[48]=[e("schemastery-form",-1)])]),_:1}),n[50]||(n[50]=e("。",-1))])])])])]),_:1}),u(t,{version:"0.3.0"},{title:i(()=>[n[55]||(n[55]=e("0.3.0 ",-1)),u(s,{type:"rainbow"},{default:i(()=>[...n[54]||(n[54]=[e("重量级",-1)])]),_:1})]),default:i(()=>[n[56]||(n[56]=l("ul",null,[l("li",null,[e("refactor!: drop naive-ui, rewrite SchemaForm to WebComponent "),l("ul",null,[l("li",null,"我们抛弃了对 Naive UI 的依赖，转而使用原生 WebComponent 来实现 SchemaForm 组件。"),l("li",null,[e("这使得 PreferencesForm 组件的打包体积大幅缩小为原来的 "),l("strong",null,"1/10"),e("！")])])]),l("li",null,[e("refactor!: make monorepo "),l("ul",null,[l("li",null,[e("现在 InPageEdit NEXT 采用了 Monorepo 结构，核心功能被拆分到 "),l("code",null,"@inpageedit/core"),e(" 包中。")])])]),l("li",null,[e("docs: update documentation "),l("ul",null,[l("li",null,"文档中心现在更加炫酷了！")])]),l("li",null,[e("chore: project housekeeping "),l("ul",null,[l("li",null,"更新了依赖，修复了一些小问题，提升了项目的整体质量。")])])],-1))]),_:1}),u(t,{version:"0.2.0"},{default:i(()=>[...n[57]||(n[57]=[l("ul",null,[l("li",null,"chore: publish with types declaration"),l("li",null,"fix: ResourceLoader load relative path")],-1)])]),_:1}),u(t,{version:"0.1.1"},{default:i(()=>[...n[58]||(n[58]=[l("ul",null,[l("li",null,"feat: add bundled pack")],-1)])]),_:1}),u(t,{version:"0.1.0"},{default:i(()=>[...n[59]||(n[59]=[l("ul",null,[l("li",null,"feat: 🎉 First release")],-1)])]),_:1})]),_:1}),u(d),u(f)])}}});export{Q as __pageData,Y as default};
