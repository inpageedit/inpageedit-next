import{U as v,Q as x,A as a,y as T,l as E}from"./mockInPageEdit.dGXzNdjP.js";import"./framework.DeVdP8gD.js";var j=Object.create,u=Object.defineProperty,I=Object.getOwnPropertyDescriptor,b=(r,e)=>(e=Symbol[r])?e:Symbol.for("Symbol."+r),w=r=>{throw TypeError(r)},O=(r,e,s)=>e in r?u(r,e,{enumerable:!0,configurable:!0,writable:!0,value:s}):r[e]=s,L=(r,e)=>u(r,"name",{value:e,configurable:!0}),C=r=>[,,,j(r?.[b("metadata")]??null)],F=["class","method","getter","setter","accessor","field","value","get","set"],P=r=>r!==void 0&&typeof r!="function"?w("Function expected"):r,B=(r,e,s,i,t)=>({kind:F[r],name:e,metadata:i,addInitializer:n=>s._?w("Already initialized"):t.push(P(n||null))}),D=(r,e)=>O(e,b("metadata"),r[3]),_=(r,e,s,i)=>{for(var t=0,n=r[e>>1],o=n&&n.length;t<o;t++)n[t].call(s);return i},z=(r,e,s,i,t,n)=>{var o,c,p,l=e&7,y=!1,m=0,k=r[m]||(r[m]=[]),g=l&&(t=t.prototype,l<5&&(l>3||!y)&&I(t,s));L(t,s);for(var f=i.length-1;f>=0;f--)p=B(l,s,c={},r[3],k),o=(0,i[f])(t,p),c._=1,P(o)&&(t=o);return D(r,t),g&&u(t,s,g),y?l^4?n:g:t},S,h,U;S=[E(["preferences","wikiPage","wikiTitle","modal","preferencesUI"])];class d extends(U=v){constructor(e){super(e,{},"pref-sync"),this.ctx=e,e.set("prefSync",this)}start(){const e=this.ctx;e.preferences.defineCategory({name:"pref-sync",label:"Sync",description:"Import and export preferences",index:98}),e.preferences.registerCustomConfig("pref-sync",x.object({"preferences-ui-pref-sync":x.const(a("section",{children:a("div",{style:{display:"flex",gap:"1rem"},children:[a("button",{onClick:s=>{s.preventDefault();const i=e.preferencesUI.getExistingModal(),t=s.target;t.disabled=!0,i?.setLoadingState(!0),this.importFromUserPage().then(n=>{const o=Object.keys(n??{}).length;this.ctx.modal.notify("success",{title:"Preferences Imported",content:a("div",{children:[a("div",{children:["Successfully imported ",o," ",o>1?"settings":"setting",":"]}),a("ol",{style:{listStyle:"auto",paddingLeft:"1em"},children:Object.entries(n??{}).map(([c,p])=>a("li",{children:[c,": ",p?.toString()]},c))})]})}),i?.close?.()}).finally(()=>{t.disabled=!1,i?.setLoadingState(!1)})},children:"Import"}),a("button",{onClick:s=>{s.preventDefault();const i=s.target;i.disabled=!0;const t=e.preferencesUI.getExistingModal();t?.setLoadingState(!0),this.exportToUserPage().then(n=>{this.ctx.modal.notify("success",{title:"Preferences Exported",content:a("p",{children:["Your preferences have been exported to"," ",a("a",{href:n.getURL().toString(),target:"_blank",children:n.getPrefixedText()}),"."]})}),t?.close?.()}).finally(()=>{i.disabled=!1,t?.setLoadingState(!1)})},children:"Export"})]})})).description("Backup your preferences to user page").role("raw-html")}).description("Backup your preferences to user page"),"pref-sync")}stop(){}getUserPrefsPageTitle(){try{const e=this.ctx.wiki?.userInfo?.name;return e?this.ctx.wikiTitle.newTitle(`User:${e}/ipe-prefs.json`,2):null}catch{return null}}async importFromUserPage(){const e=this.ctx,s=this.getUserPrefsPageTitle();if(!s)return this.logger.debug("Cannot get user page title, skipping load"),{};try{const i=s.getURL({action:"raw",ctype:"application/json"});let t;try{if(t=await fetch(i.toString()),!t.ok){if(t.status===404)return this.logger.debug("User preferences page does not exist"),{};throw new Error(`HTTP ${t.status}: ${t.statusText}`)}}catch(o){if(o instanceof TypeError&&o.message.includes("Failed to fetch"))return this.logger.debug("User preferences page does not exist or network error"),{};throw o}let n;try{n=await t.json()}catch(o){return this.logger.warn("Failed to parse user preferences JSON:",o),{}}for(const[o,c]of Object.entries(n))await e.preferences.set(o,c);return this.logger.info("Loaded preferences from user page:",s),n}catch(i){return this.logger.error("Failed to load preferences from user page:",i),{}}}async exportToUserPage(){const e=this.ctx,s=this.getUserPrefsPageTitle();if(!s)throw new Error("Cannot get user page title");const i=await e.preferences.getExportable(),t=JSON.stringify(i,null,2);try{return await this.ctx.wikiPage.newBlankPage({title:s.toString(),ns:2}).edit({text:t,summary:"Update InPageEdit preferences",watchlist:T.nochange}),this.logger.info("Exported preferences to user page:",s),s}catch(n){throw this.logger.error("Failed to export preferences to user page:",n),n}}}h=C(U);d=z(h,0,"PluginPrefSync",S,d);_(h,1,d);export{d as PluginPrefSync};
