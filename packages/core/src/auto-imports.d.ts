/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// noinspection JSUnusedGlobalSymbols
// Generated by unplugin-auto-import
// biome-ignore lint: disable
export {}
declare global {
  const ActionButton: typeof import('./components/ActionButton')['ActionButton']
  const BasePlugin: typeof import('@/plugins/BasePlugin')['default']
  const CALLABLE_APPLY_SYMBOL: typeof import('./utils/makeCallable')['CALLABLE_APPLY_SYMBOL']
  const CALLABLE_CTOR_SYMBOL: typeof import('./utils/makeCallable')['CALLABLE_CTOR_SYMBOL']
  const CheckBox: typeof import('./components/CheckBox')['CheckBox']
  const Endpoints: typeof import('./constants/endpoints')['Endpoints']
  const IPEInjectKey: typeof import('./utils/vueHooks')['IPEInjectKey']
  const InputBox: typeof import('./components/InputBox')['InputBox']
  const MBox: typeof import('./components/MBox/index')['MBox']
  const MwUserLinks: typeof import('./components/MwUserLinks')['MwUserLinks']
  const ProgressBar: typeof import('./components/ProgressBar/index')['ProgressBar']
  const RadioBox: typeof import('./components/RadioBox')['RadioBox']
  const RegisterPreferences: typeof import('./decorators/Preferences')['RegisterPreferences']
  const TabContent: typeof import('./components/TabView/index')['TabContent']
  const TabLabel: typeof import('./components/TabView/index')['TabLabel']
  const TabView: typeof import('./components/TabView/index')['TabView']
  const TwinSwapInput: typeof import('./components/TwinSwapInput/index')['TwinSwapInput']
  const camelCase: typeof import('./utils/string')['camelCase']
  const capitalize: typeof import('./utils/string')['capitalize']
  const computeFallback: typeof import('./utils/computeable')['computeFallback']
  const deepToRaw: typeof import('./utils/vueReactivity')['deepToRaw']
  const defineAsyncPlugin: typeof import('./utils/defineAsyncPlugin')['defineAsyncPlugin']
  const ensureSlash: typeof import('./utils/string')['ensureSlash']
  const injectIPE: typeof import('./utils/vueHooks')['injectIPE']
  const interpolate: typeof import('./utils/interpolate')['interpolate']
  const makeCallable: typeof import('./utils/makeCallable')['makeCallable']
  const makeSearchParams: typeof import('./utils/url')['makeSearchParams']
  const makeURL: typeof import('./utils/url')['makeURL']
  const noop: typeof import('./utils/noop')['noop']
  const paramCase: typeof import('./utils/string')['paramCase']
  const promiseWithResolvers: typeof import('./polyfills/Promise.withResolvers')['promiseWithResolvers']
  const qs: typeof import('./components/utils')['qs']
  const qsa: typeof import('./components/utils')['qsa']
  const setStyles: typeof import('./components/utils')['setStyles']
  const sleep: typeof import('./utils/sleep')['sleep']
  const snakeCase: typeof import('./utils/string')['snakeCase']
  const trimSlash: typeof import('./utils/string')['trimSlash']
  const uncapitalize: typeof import('./utils/string')['uncapitalize']
  const useIPE: typeof import('./utils/vueHooks')['useIPE']
}
// for type re-export
declare global {
  // @ts-ignore
  export type { ActionButtonProps } from './components/ActionButton'
  import('./components/ActionButton')
  // @ts-ignore
  export type { CheckBoxProps } from './components/CheckBox'
  import('./components/CheckBox')
  // @ts-ignore
  export type { InputBoxProps } from './components/InputBox'
  import('./components/InputBox')
  // @ts-ignore
  export type { MBoxProps, MBoxElement } from './components/MBox/index'
  import('./components/MBox/index')
  // @ts-ignore
  export type { RadioBoxProps } from './components/RadioBox'
  import('./components/RadioBox')
  // @ts-ignore
  export type { TabViewLabelOptions } from './components/TabView/index'
  import('./components/TabView/index')
  // @ts-ignore
  export type { TwinSwapInputProps, TwinSwapInputInput, TwinSwapElement } from './components/TwinSwapInput/index'
  import('./components/TwinSwapInput/index')
  // @ts-ignore
  export type { Endpoints } from './constants/endpoints'
  import('./constants/endpoints')
  // @ts-ignore
  export type { ComputeAble } from './utils/computeable'
  import('./utils/computeable')
  // @ts-ignore
  export type { PreferenceAugmented } from './decorators/Preferences'
  import('./decorators/Preferences')
}
